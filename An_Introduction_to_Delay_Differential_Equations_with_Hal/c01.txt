An Introduction to Delay Differential Equations with Applications to the Life Sciences


This book is intended to be an introduction to delay differential equations for upperlevel undergraduates or beginning graduate mathematics students who have a reasonable 
background in ordinary differential equations and who would like to get to the applications quickly. I used a preliminary version of this manuscript in teaching such a course 
at Arizona State University over the past two years. Existing texts on the subject by Diekmann et al. [26] and by Hale and Lunel [41], while excellent on the theory, are heavy 
on functional analytic background and light on applications. In my experience, most graduate students do not have the requisite background to read such texts proﬁtably. A more 
applications oriented text by Kuang [48] is, unfortunately, out of print.

Both theory and applications of delay differential equations require a bit more mathematical maturity than its ordinary differential equations counterparts. Primarily, this is 
because the theory of complex variables plays such a large role in analyzing the characteristic equations that arise on linearizing around equilibria. Ideal prerequisites for 
this book include a second course in ordinary differential equations such as in the text [78, 10], some familiarity with complex variables, and some elementary analysis. 
Results from the calculus of several variables are routinely used, especially, the implicit function theorem.

This book focuses on the key tools necessary to understand the applications literature involving delay equations and to construct and analyze mathematical models involving 
delay differential equations. It begins with a survey of mathematical models involving delay equations. These are primarily from the biological literature, in keeping with my 
own prejudices, and due to the relative frequency of delay models in that literature relative to others. This is followed by a “warm-up” chapter on the simplest possible delay 
equation u ′ (t) = −α u(t −r). This simple example illustrates many of the complexities that arise with delays and has the advantage that results may be easily and explicitly 
worked out. Its main message is that delays naturally induce oscillations. Standard existence and uniqueness results are taken up in Chapter 3. The method of steps is 
introduced and exploited for discrete delay equations. For the reader interested mainly in applications, this may sufﬁce. A more general approach follows but no ﬁxed point 
theorems are used: the method of successive

approximations works ﬁne. A key notation is introduced here, one that takes a bit of getting used to, namely the state variable x t which appears throughout the remainder of 
the book. In addition to continuous dependence of solutions on initial data, continuation of solutions, positivity, and comparison of solutions are also discussed because many 
applications come from biology where positivity restrictions are inherent to the models. Linear equations are taken up next with the primary aim being stability. In 
applications, linear delay equations arise through linearization of a nonlinear equation about an equilibria so the focus is on linear stability analysis and the characteristic 
equation the roots for which determine stability. Proof of the validity of linearized stability would require too much additional mathematics and therefore it is not given.

The following chapter is an introduction to abstract dynamical systems theory, using ordinary differential equations, discrete-time difference equations, and now delay 
differential equations as examples. It is shown that a delay differential equation induces a semidynamical system on the space of continuous functions on the delay interval. 
The focus then turns to omega limit sets, the usual results familiar from ODEs continue to hold but with some nuances due to the inﬁnite-dimensional state space. Applications 
to the delayed logistic equation and the delayed chemostat model are treated. The LaSalle invariance principle is established and an application is given. Next, the Hopf 
bifurcation theorem, critical for applications, is treated. A simple canonical example is considered where the bifurcation can be explicitly computed. Following this, the Hopf 
bifurcation theorem is stated without proof. It is applied to the standard delayed negative feedback system x ′ (t) = −f(x(t − 1)) where x f(x) > 0. In this case, a formal 
expansion for the periodic solution in terms of a small parameter (this is fully justiﬁed in an appendix) is given. Applications to various second-order delay equations are 
then considered, one of which is stabilizing the up position of a damped pendulum with delayed feedback; another is a model of a gene regulatory network. Finally, the beautiful 
Poincar´e–Bendixson theory for monotone cyclic feedback systems, obtained recently by Mallet-Paret and Sell, is stated.

The following brief chapter is an introduction to equations with inﬁnite delay and to the linear chain trick by which certain special kinds of inﬁnite delays can lead to 
ordinary differential equations. These arise often in the modeling literature so an example is discussed in some detail. The ﬁnal chapter focuses on a model of virus predation 
on a bacterial host in the setting of a chemostat where the bacteria subsist on a supplied nutrient. The delay corresponds to the latent period following virus infection during 
which new virus particles are manufactured within the cell. Most of the theoretical results of previous chapters are used in the analysis of this system of delay equations.

Two brief appendices should help those readers needing additional background on complex variables and analytic functions including the very useful Rouch´e’s theorem, and 
implicit function theorems. The Ascoli–Arzela theorem is stated and discussed and the useful ﬂuctuation method is described. A second appendix is devoted to a rigorous proof 
of Hopf bifurcation for the delayed negative feedback systems.

The impatient reader could skim the applications in Chapter 1, jump over Chapter 2, and start with Chapter 3. A note on notation: we use R for the set of real numbers, C for 
the set of complex numbers, and f ′ denotes the derivative of a function f.

I would like to acknowledge the inﬂuence of Yang Kuang, a collaborator on much of the author’s own work in delay differential equations, on this work and to thank him for 
providing several ﬁgures used in the book. Several students, colleagues, and anonymous reviewers read portions of the manuscript and provided valuable feedback. Among these, 
the author would like to thank Patrick de Leenheer, Thanate Dhirasakdanon, Zhun Han, and Harlan Stech. Most of what I know about delay differential equations, I learned from 
Jack Hale, a giant in the ﬁeld.

Finally, I have been supported by the NSF during the time this book took shape, recently by award DMS 0918440.

Chapter 1

Introduction

Abstract Various delay differential equations, primarily taken from the biological sciences literature, are presented, along with necessary background from the application 
area, in order to motivate our study of delay differential equations. These range from models in population biology, physiology, epidemiology, economics, and neural networks, 
to control of mechanical systems. Some of these are treated in detail later in the text; others can serve as potential student projects. The reader should feel free to pick and 
choose to which of these to devote attention. Following this, some terminology is introduced and the reader is pointed to various computer software designed speciﬁcally for 
delay differential equations.

1.1 Examples of Delay Differential Equations

The familiar logistic equation describing the growth of a single population is given by N ′ (t) = N(t)[b−aN(t)]

It assumes that population density negatively affects the per capita growth rate according to dN/Ndt = b−aN(t) due to environmental degradation. Hutchinson [46] pointed out 
that negative effects that high population densities have on the environment inﬂuence birth rates at later times due to developmental and maturation delays. This led him to 
propose the delayed logistic equation

N ′ (t) = N(t)[b−aN(t −r)]

(1.1)

where a,b,r > 0 and r is called the delay. Throughout this book, f ′ (t) denotes the derivative of function f(t). See May [58], Nisbet and Gurney [62], and Ruan [63] for a 
description of the model. Wright’s famous conjecture [80], made in 1955, regarding the solutions of (1.1) remains open; it is discussed in Chapter 5. Arino, Wang, and Wolkowicz 
[4] propose an alternative model that has simpler dynamics.

Perhaps it would be more realistic to assume that the density dependence is distributed over an interval in the past rather than concentrated at a single time instant. This 
would yield:

N ′ (t) = N(t)[b−a ∞ 0 N(t −s)k(s)ds] ∫

(1.2)

where kernel k is normalized so that ∫ ∞ 0 k(s)ds = 1.

A criticism of the delayed logistic equation is that the birth and death rates are not clearly distinguished. Nicholson’s data on population ﬂuctuations of the sheep blowﬂy 
Lucillia cuprina motivated the model now referred to as the Nicholson’s blowﬂy equation:

N ′ (t) = bN(t −r)exp(−N(t −r)/N 0 )− δ N(t)

(1.3)

The blowﬂy lays eggs that hatch larvae which ultimately become sexually mature ﬂies. The model accounts only for adult ﬂies for which food is supplied at a constant rate. It 
is assumed that eggs take exactly r time units to develop into adults. The ﬁrst term on the right side accounts for recruitment of new adults; it should be regarded as a 
product of a fecundity term and a probability of survival from egg to adult: aN(t − r) × cexp(−N(t − r)/N 0 ). The probability of survival decreases with increasing 
population size due to intraspeciﬁc competition for food among the immature ﬂies. The ﬁnal term on the right accounts for death. See [62, 58] for an extensive discussion.

Volterra (1931) introduced the predator-prey system

N 1 ′ (t) = N 1 (t)[b 1 −a 12 N 2 (t)]

(1.4)

t N 2 ′ (t) = N 2 (t)[−b 2 +a 21 N 1 (s)k(t −s)ds] ∫ −∞

where the fraction k(t −s) of prey ﬁsh eaten at time t −s is assumed to be translated into predator ﬁsh biomass at time t. Volterra’s work, including the derivation of this 
model, is easily accessible in [67]. See Cushing for more on equations of this type [24].

Mackey models the control of carbon dioxide levels in the blood by the equation

x(t − τ )n  x ′ (t) = λ − α x(t)Vm  θ n +x(t − τ )n 

(1.5)

where x(t) is the partial pressure of carbon dioxide in the blood and τ is the time between oxygenation of blood in the lungs and stimulation of chemoreceptors in the 
brainstem. See Glass and Mackey [36] and Keener and Sneyd [47].

The Mackey–Glass equation for the density of certain blood cells is famous for its chaotic behavior. It is

β x(t − τ ) x ′ (t) = −α x(t)+ n n x(t − τ ) +A

(1.6)

where α , β ,A, τ > 0 and τ is the delay between initiation of cellular production in the bone marrow and release of mature cells into the blood. See Glass and Mackey [36]. 
This same equation has been employed to model cortisol concentrations in the blood of human subjects by Dokoumetzidis et al. [54, 27]. In order to take account of the 24 
circadian rhythm inﬂuencing cortisol secretion, they take β = kA n , where

2 π A = A max cos (t − f) +B. ( 1440 )

Cortisol, often termed the “stress hormone”, is secreted from the adrenal gland. It indirectly controls its own secretion in a complicated feedback cycle, the duration of which 
is the delay τ in the model.

More sophisticated models of the production of red blood cells by the stem cells in the bone marrow, termed erythropoeisis, have been developed by B´elair, Mackey, and Mahaffy 
[5]. See also [47]. The hormone erythropoiten, secreted by cells in the kidney, stimulates the production of precursor cells that will eventually mature into red blood cells. 
Therefore, a model should include this hormone as well as blood cell densities. B´elair et al. obtain the following system for erythropoiten E and mature blood cells M,

M ′ (t) = r[S(E(t −T 1 ))−e − γ T 2 S(E(t −T 1 −T 2 ))]

(1.7)

−γ M(t)

E ′ (t) = f(M(t))−kE(t)

Function S(E), depending on erythropoiten level E, is the recruitment rate of blood cell precursor cells. It is an increasing function of its argument that vanishes when E = 0; 
in simulations described in [5], it is taken to be linear. Precursor cells require time T 1 ≈ 5 − 9 days to mature, hence the ﬁrst delay appearing in the equation for mature 
cells represents the time for precursor cells to mature. T 2 ≈ 120 days is the assumed maximum age of a mature cell. Parameter γ is the decay rate of mature cells, and r is a 
composite parameter. Roughly, mature cells increase due to recruitment of precursor cells produced at time t −T 1 , which mature at time t, and are lost due to a background 
decay rate and abruptly when the mature cells reach age T 2 . The hormone production rate f(M) is a decreasing function of mature cell density, typically taken to be a Hill 
function f(M) = a(a+bM p ) −1 , and the hormone is degraded in the liver at rate k. These monotonicity assumptions allow us to see the effect of a sudden decrease in red blood 
cells, for example, due to blood donation, assuming the system was formerly in equilibrium. In response, erythropoiten production is increased leading to higher concentration 
levels that stimulate production of precursor cells. Following the delay time T 1 , these cells mature into new mature cells causing a rebound in mature cell density. This, in 
turn, reduces erythropoiten production.

Actually, B´elair et al. [5] derive a much more general partial differential equation model of erythropoeisis that describes the densities of precursor cells and mature cells 
with respect to cell maturity and time, from which they obtain the system (1.7)

under special assumptions. This paper is especially recommended for its careful derivation of the delay differential equations from ﬁrst principles. Simulations of (1.7) show 
oscillatory return to equilibrium following blood donation; sustained oscillations can also occur under suitable conditions that may reﬂect a diseased state.

More recent work on the regulation of blood cell types involving delay differential equations may be found in [18, 21] and the references therein.

Brunovsky et al. [11] model the deviation x(t) of the value of a foreign currency from an assumed constant baseline level that may not be precisely known by currency traders by 
the equations

x ′ (t) = a[x(t)−x(t −1)]−b | x(t) | x(t)

(1.8)

where a,b > 0. Traders look at the previous trajectory of the currency to estimate what it will do in the future. If it is currently higher than it was (x(t) > x(t − 1)) then 
there is a tendency to predict a continual rise in its value and vice-versa if it is presently lower than it was in the past. This is the meaning of the ﬁrst term on the right 
side. But there are bears lurking in the woods if its value gets too high (or low). They will feel that it must come down because it surely must be higher than its true value. 
This is the meaning of the last term. Brunovsky et al. [11] show that for a < 1 the x = 0 equilibrium is asymptotically stable whereas for a > 1 there is a nonzero periodic 
solution that does not arise as a Hopf bifurcation.

An S → I → R epidemic model with ﬁxed period of temporary immunity is given by

S ′ (t) = −β I(t)S(t)+ γ I(t − ω )

(1.9)

I ′ (t) = β I(t)S(t)− γ I(t)

R ′ (t) = γ I(t)− γ I(t − ω )

S denotes susceptible individuals, I denotes infectives, and R recovereds. Note that an individual remains in the R class precisely ω units of time: β , γ , ω > 0. See Brauer 
and Castillo-Chavez [9]. This delay system must be treated with care in order that R not become negative! One can also add birth and death to the model by adding µ − µ S to 
the ﬁrst equation and subtracting µ I from second and µ R from third equation where µ is the birth (death) rate.

Busenberg and Cooke [12] introduce the following periodic delay equation

y ′ (t) = b(t)y(t −T)[1−y(t)]−cy(t)

(1.10)

for the proportion of infectious individuals with a communicable disease carried by a vector, such as a mosquito. Humans are infected by contact with an infected vector and 
susceptible vectors are infected by contact with an infected person, becoming able to infect a susceptible human after a delay T during which the infectious agent develops. 
Seasonal periodic incidence is captured by assuming that 0 ≤ b(t) = b(t + ω ); for example b(t) = b(1+asin(2π t/ω )), 0 < a < 1. Parameter c is the recovery rate.

De Gaetano and Arino [25, 60] model the intravenous glucose tolerance test using

G ′ (t) = −aG(t)−bI(t)G(t)+c(t)

(1.11)

t I ′ (t) = −dI(t)+e G(s)ds ∫ t−τ

where G is glucose blood concentration and I is insulin blood plasma concentration. The integral term represents the pancreatic release of insulin which depends on the 
distribution of glucose over the past τ time units. c > 0 is a glucose source coming from liver secretion; both insulin and glucose are removed from the blood by cellular 
uptake. For more current work on the modeling of insulin see Li and Kuang [52].

A simple model of a single self-excited neuron with delayed excitation is given by (1.12)

x ′ (t) = −α x(t)+tanh(x(t − τ ))

where x(t) encodes the neuron’s activity level. The delay τ represents the transmission time between output x(t) and input.

Typically, many neurons are connected into a neural network so one has

n y i ′ (t) = −A i y i (t)+ ∑ W i j tanh(y j (t − τ ij )+I i (t) j=1

(1.13)

where y i is the activity of the ith neuron, τ i j is the delay in signal transmission between the jth neuron and ith neuron, W ij is the weighting of the connection between 
the jth neuron and the ith neuron, I i represents other inputs to the ith neuron. See van den Driessche, Wu, and Zou [76]. Wei and Ruan [79] show that oscillations may occur 
for the two-neuron system:

u 1 ′ (t) = −u 1 +2tanh(u 2 (t − τ 12 ))

(1.14)

u 2 ′ (t) = −u 2 −1.5tanh(u 1 (t − τ 21 ))

Control of gene expression in cells is often modeled with time delays in equations of the form

x 1 ′ (t) = g(x n (t −r n ))− α 1 x 1 (t)

(1.15)

x j ′ (t) = x j−1 (t −r j−1 )− α j x j (t)

The gene is transcribed producing mRNA(x 1 ) which is translated into enzyme x2  and it in turn produces another enzyme x 3 and so on. The end product x n acts to repress the 
transcription of the gene g ′ < 0. Time delays are introduced to account for time involved in transcription, translation, and transport. The α j > 0 represent decay rates of 
the species. See [3, 32, 68] for more references on these equations. We consider (1.15) in Chapter 6.

Many delay differential equations arise in mathematical modeling of physiological processes. Volume 2 of Keener and Sneyd’s book on the subject [47] is a good source for such 
examples.

Similar delayed feedback systems have been introduced to model the control of testosterone levels in the blood stream. Murray [61][chapter 6, section 6] introduces the model

R ′ (t) = f(T(t))−b 1 R(t)

(1.16)

L ′ (t) = g 1 R(t)−b 2 L(t)

T ′ (t) = g 2 L(t − τ )−b 3 T(t)

The hypothalmus secretes LHRH, R, which controls the release of LH, L, by the pituitary which controls the production of testosterone, T, in the gonads. The delay τ accounts 
for the blood circulation time in the body. f(T) models the feedback on the production of R by testosterone T; it satisﬁes f(0) > 0 and f ′ < 0. Enciso and Sontag [30] correct 
an error in the analysis of this system in [61].

Ellermeyer [28] and Ellermeyer, Hendrix, and Ghoochan [29] introduce a delay in the standard bacterial growth model in a chemostat to obtain the model system

ν m S(t) S ′ (t) = D(S 0 −S(t))x(t) C h +S(t)

(1.17)

Y ν m S(t − τ ) x ′ (t) = exp(−Dτ ) τ )−Dx(t) x(t C h +S(t − τ )

Here S(t) denotes the substrate (food for bacteria) concentration, x(t) is the biomass concentration of bacteria, and Y is a yield factor converting substrate to bacterial 
biomass (a unit of substrate produces Y units of bacteria). A chemostat can be viewed as a well-stirred vessel with fresh substrate at concentration S 0 poured in at rate D and 
unused nutrient and bacteria being drained out at the same rate D to keep the volume ﬁxed. See [69] for more on chemostats. The delay τ reﬂects the assumption that whereas 
cellular absorption of substrate is assumed to be an instantaneous process, a resulting increase in microbial biomass reﬂecting assimilation is assumed to lag by a ﬁxed 
amount of time τ . Experimental work in [29] found a delay of 20 minutes for a strain of E. coli. The argument for the bacterial growth term in (1.17) is as follows. During the 
brief time interval [t − τ ,t − τ +dt] an amount of substrate Q 0 = f(S(t − τ ))x(t − τ )dt is taken up by the cells in the chemostat, where f(S) = ν m S/(C h +S) is used 
for brevity. At time t this substrate will have been converted to bacterial biomass inside the cells, some of which will have drained out of the chemostat and therefore must 
not be counted. To see how much of Q 0 remains in the chemostat at time t, let Q(s) denote the amount remaining in the chemostat at time t − τ + s. As a constituent of the 
chemostat just like bacteria and substrate, it is subject to draining out according to dQ/ds = −DQ with initial condition Q0  at s = 0. Therefore at s = τ , which corresponds 
to time t, Q = Q 0 e −D τ . Multiplying by Y gives that portion of the biomass created that remains in the chemostat at

time t. This accounts for the factor e −D τ in (1.17). This system is treated in detail in Chapter 5.

Culshaw and Ruan [22] modify a standard within-host HIV model to include a time delay between virus-cell contact and subsequent infection of the CD4+ T-cell. The model is given 
by

T(t)+I(t) T ′ (t) = s− µ T T(t)+rT(t)(1− ) Tmax 

−k 1 T(t)V(t)

I ′ (t) = k 1 ′ T(t − τ )V(t − τ )− µ 1 I(t)

(1.18)

V ′ (t) = N µ b I(t)−k 1 T(t)V(t)− µ V V(t)

where T denotes healthy (uninfected) T cells in the blood, I are the T cells infected by the HIV virus, and V is the virus level in the blood. In more recent work, Culshaw, 
Ruan, and Webb [23] cite evidence that in lymphatic tissue direct cell-to-cell transmission of HIV is the dominant mode of infection. If C denotes concentration of healthy 
cells and I is concentration of infected cells, they derive the model system:

C ′ (t) = rC(t)

C(t)+I(t) 1( CM 

)

−k I I(t)C(t)

t I ′ (t) = k I ′ I(u)C(u)F(t −u)du− µ I I(t) ∫ −∞

(1.19)

k I ′ /k I is the fraction of cells surviving the incubation period. The integral term is explained as follows. A cell that becomes productively infectious at time t was 
infected at a time u in the past with probability F(u). This is best appreciated by making a change of variables in the integral. If F(u) = δ (u), the unit impulse function at 
u = 0, the system becomes an ODE. If F(u) = δ (u− τ ), it becomes a delay equation with discrete delay. Finally, if

ap  up−1  F(u) = e−au  (p−1)!

the delay is effectively inﬁnite but centered at p/a. Inﬁnite delays of this type are considered in Chapter 7.

Lenski and Levin [51] model phage (virus that attacks bacteria) growth on a bacterial host that consumes a limiting nutrient in a chemostat by the system

R ′ (t) = D(R 0 −R(t))− f(R(t))S(t)

(1.20)

S ′ (t) = (f(R(t))−D)S(t)−kS(t)P(t)

I ′ (t) = kS(t)P(t)−DI(t)−e−D τ kS(t − τ )P(t − τ )

P ′ (t) = −DP(t)−kS(t)P(t)+be−D τ kS(t − τ )P(t − τ )

R is the resource supporting bacterial growth, S is uninfected bacteria, I is phageinfected bacteria, and P is phage. Parameter b denotes the burst size, the number of phage 
progeny released following lysis of the host cell; k denotes the phage adsorption rate, R 0 is input nutrient supplied to bacteria, D is the dilution rate of the chemostat, and 
f(R) is the speciﬁc growth rate of bacteria at resource level R. The delay τ accounts for the phage latent period, the time from binding to host cell, and subsequent host cell 
lysis. The factor e −D τ appears for reasons analogous to those described above for (1.17). A recent mathematical analysis of the model was carried out by Beretta, Solimano, 
and Tang [7]. We devote Chapter 8 to a study of its dynamics.

A recent survey of predator-prey models with time delays by Ruan [64] is highly recommended.

H.-O. Walther [77] considers the problem of making a soft landing from inferred position and velocity data. Suppose you travel on a straight line, the u-axis, and desire to 
make a soft landing at the origin. For deﬁniteness, suppose that you are on the positive u-axis. Then you want:

u(t) > 0, t < t 0 ≤ ∞, lim(u(t),u ′ (t)) = (0,0) t ↑ t 0

(1.21)

where t 0 is the time of landing. You want to devise a control mechanism that lets you take your current position and velocity and use it to compute the desired acceleration in 
order to achieve a soft landing. But how will you know your current position and velocity? You might send a signal that travels at speed c, reﬂects off the landing site u = 0, 
and returns. If it is sent at time t −s and returns at time t, then

cs = u(t −s)+u(t)

(1.22)

Of course, you don’t know either u(t) or u(t −s) but you can measure s. If c is large then u(t) ≈ u(t −s) so a good estimate of your position at time t is

cs p(t) = 2

and your velocity can be estimated as p ′ (t). Your problem then is to deﬁne the control function a such that (1.21) is achieved for a large set of initial data for the system

u′ =v

(1.23)

v ′ = a(p, p ′ )

Clearly, you want a(0,0) = 0 but what else? Walther ﬁrst considers the case where position and velocity are precisely known (p = u, p ′ = v) in the equations above and 
restricts attention to linear a = α u + β v. Consideration of the resulting linear constant coefﬁcient system and its eigenvalues motivates the choice β < 0 and −β 2 /4 < α < 
0. See the article [77] for more on this problem. We include it here to point out the possibility that a delay may depend on the state of the system instead

of being merely a constant. Such delays are called state-dependent delay and are a current focus of research [42].

Consider a pendulum that can move through an entire circle. Is it possible to stabilize the “straight-up” steady state? Consider the damped pendulum equation where we have 
added a delayed negative feedback restoring force to try to stabilize the straight-up equilibrium θ = π :

ml θ ′′ (t)+kθ ′ (t)+mgsin(θ (t)) = R(π − θ (t −r))

(1.24)

where θ represents the (counterclockwise) angle from the straight-down position. Parameter m denotes the mass on the end of the pendulum of length l; g is the gravitational 
constant and k is a measure of the damping. Recall that when R = 0, the “down” steady state θ = 0 is asymptotically stable if k > 0 and the “up” steady-state θ = π is an 
unstable saddle point. Can we choose the “gain” R > 0 so as to stabilize the up steady-state? The delay r reﬂects the time needed to measure θ and implement the stabilizing 
feedback. For more recent work on stabilizing the vertical position of an inverted pendulum see Landry et al. [49]. Equation (1.24) is studied in Chapter 6.

1.2 Some Terminology

We introduce here some commonly used terminology. If x(t) is a function of time, then the delay r in the argument of x(t − r) is called a discrete delay and delay differential 
equations such as (1.1) involving only discrete delays are said to be of discrete delay type or, more simply, to have discrete delays. A term like

t k(t −s)x(s)ds = r 0 k(z)x(t −z)dz ∫ t−r ∫

where 0 ≤ r ≤ ∞ is referred to as a distributed delay because it reﬂects a weighted average of delays x(t −z). Distributed delays are thought to be more realistic but they 
are more difﬁcult to work with and the kernel k may be difﬁcult to estimate from data. Delay differential equations such as (1.4) containing these kinds of delays are said to 
have distributed delays.

If the delay kernel k(u) in (1.4) (or in (1.2)) is identically zero for all u > u max , then the delay represented by the integral term

t N 1 (s)k(t −s)ds = ∞ 0 N 1 (t −u)k(u)du ∫ −∞ ∫

is said to be a bounded delay because the integral only samples values of N 1 for a bounded set of past times [t − u max ,t). Otherwise, we call the delay an unbounded delay 
or an inﬁnite delay. Discrete delays are obviously bounded delays. Equation (1.19) has an unbounded distributed delay when

Fig. 1.1 F(u,a, p) for a = p = 3,5,10. The mean delay is one.

ap  up−1  F(u) = F(u,a, p) = . e−au  (p−1)!

See Figure 1.1. Unbounded delays are more challenging to deal with because there are many possible classes of initial data one may use. These notes primarily treat equations 
with bounded delays. However, Chapter 7 is devoted to inﬁnite delays.

There are many variations that may occur. For example, a discrete (or distributed) delay may be time-dependent such as x(t −r(t)) where r(t) ≥ 0 is some prescribed function. 
It may also be a state-dependent delay such as x(t − r(x(t))). This is the form of the delay deﬁned implicitly by (1.22). These kinds of delays are especially challenging 
from the mathematical viewpoint.

What do we mean by a solution of an equation like (1.1)? If N(t) is differentiable on a ≤ t < b and satisﬁes the equation on that interval then N(t −r) must be deﬁned for 
all such t. This means that N must be deﬁned at least on a − r ≤ t ≤ b although N(t) need not be differentiable on a − r ≤ t ≤ a. This motivates the following 
deﬁnition. N : [a − r,b) → R is a solution of (1.1) if it is continuous on its domain, differentiable on [a,b) (right-differentiable at a), and satisﬁes the equation

for a ≤ t < b.

Most of the equations described above are of autonomous type inasmuch as the time t does not appear explicitly in the equation, (1.10) being the only exception. It is called a 
nonautonomous equation. Just as for ODEs, equations of autonomous type have the property that any time translate of a solution is again a solution. For example, the reader may 
easily verify that if N(t) is a solution of (1.1) deﬁned on

a−r ≤ t ≤ b, where a < b, and c is any real number then n(t) = N(t −c) is a solution deﬁned on a+c−r ≤ t ≤ b+c.

1.3 Solving Delay Equations Using a Computer

Anything written here is sure to be out of date soon. At the time of writing, the following were found to be useful.

A tutorial on solving delay equations using MATLAB by Shampine and Thompson can be found at the web site http://www.runet.edu/ thompson/webddes/

A list of software available for delay differential equations is maintained at the site http://twr.cs.kuleuven.be/research/software/delay/software.shtml

Among these is DDE–BIFTOOL v. 2.03, a MATLAB package for bifurcation analysis of delay differential equations. See [31].


